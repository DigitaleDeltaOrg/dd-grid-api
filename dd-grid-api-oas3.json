{
    "openapi": "3.0.2",
    "info": {
        "title": "DD-GRID-API",
        "description": "Digital Delta API for grid data. See https://github.com/DigitaleDeltaOrg/dd-grid-api for additional information",
        "contact": {
            "name": "Digitale Delta werkgroep",
            "url": "http://www.digitaledelta.org",
            "email": "email.not.yet.available@digitaledelta.org"
        },
        "license": {
            "name": "APACHE LICENSE, VERSION 2.0",
            "url": "https://www.apache.org/licenses/LICENSE-2.0"
        },
        "version": "1.0"
    },
    "servers": [
        {
            "url": "https://griddata.some-dd-provider.nl",
            "description": "One of the providers implementing the DD-GRID-API"
        }
    ],
    "tags": [
        {
            "name": "General info",
            "description": "The DD-GRID-API offers a web service by means of which one can look for and request data on rasters and curvilinear grids (i.e. on coverages).\nSee https://github.com/DigitaleDeltaOrg/dd-grid-api/blob/master/dd-grid-api-documentation-nl.md for a general description of the end points (currently in Dutch)."
        },
        {
            "name": "Coverage end points",
            "description": "The DD-GRID-API consists of a set of end points to retrieve metadata about, and the actual data on rasters and curvilinear grids (i.e. coverages)"
        }
    ],
    "paths": {
        "/": {
            "get": {
                "tags": [
                    "General info"
                ],
                "summary": "Landing page of a system that implements the DD-GRID-API",
                "description": "The landing page describes the type of coverages available in the system, and provides links to the DD-GRID-API documentation.",
                "operationId": "getLandingPage",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Landing page of the system that implements the DD-GRID-API",
                        "content": {
                            "text/html": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api": {
            "get": {
                "tags": [
                    "General info"
                ],
                "summary": "A system's DD-GRID-API implementation",
                "description": "Get a list of the DD-GRID-API end points implemented by the system.",
                "operationId": "getApiImplemention",
                "responses": {
                    "200": {
                        "description": "List of the DD-GRID-API end points.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An error occured.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/exception"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/coverages": {
            "get": {
                "tags": [
                    "Coverage end points"
                ],
                "summary": "The coverages offered by the provider",
                "description": "Returns a list with the description of the available coverages, without the actual data. This can be a mixture of grids and curvilinear grids. ",
                "operationId": "getCoverages",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/pageSize"
                    },
                    {
                        "$ref": "#/components/parameters/page"
                    },
                    {
                        "name": "boundingbox",
                        "in": "query",
                        "description": "Select only the coverages with a geometry that intersects with the _boundingbox_. The _boundingbox_ is expressed in wgs84 (EPSG:4326).",
                        "required": false,
                        "schema": {
                            "maxItems": 4,
                            "minItems": 4,
                            "type": "array",
                            "items": {
                                "type": "number"
                            }
                        }
                    },
                    {
                        "name": "startTime",
                        "in": "query",
                        "description": "Select only the coverages of which the time axis include time stamps equal to or later than _startTime_.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "description": "Date-time string that adheres to RFC 3339. Examples \"2018-02-12T23:20:50Z\"",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "endTime",
                        "in": "query",
                        "description": "Select only the coverages of which the time axis include time stamps equal to or before _endTime_.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "description": "Date-time string that adheres to RFC 3339. Examples \"2018-02-12T23:20:50Z\"",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "quantityId",
                        "in": "query",
                        "description": "Select only the coverages that contain data for the quantity with id _quantityId_.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "temperature"
                        }
                    },
                    {
                        "name": "quantityName",
                        "in": "query",
                        "description": "Select only the coverages that contain data for the quantity with name _quantityName_.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "temperature"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/filter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Metadata about the coverages exposed by the system.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/coveragelist"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An error occured.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/exception"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/coverages/{coverageId}": {
            "get": {
                "tags": [
                    "Coverage end points"
                ],
                "summary": "The metadata of a coverage.",
                "description": "All metadata the coverage identified by {coverageId}.",
                "operationId": "getCoverage",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/coverageId"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Metadata of the coverage identified by {coverageId}.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/coverage"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An error occured.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/exception"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/coverages/{coverageId}/data": {
            "get": {
                "tags": [
                    "Coverage end points"
                ],
                "summary": "Retrieve the coverage data",
                "description": "Retrieve the rangeset of a coverage (i.e. its data), or subset of that rangeset.",
                "operationId": "getCoverageData",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/coverageId"
                    },
                    {
                        "name": "boundingbox",
                        "in": "query",
                        "description": "Select only grid values that are within the _boundingbox_. (For 3d coverages, the bounding box may contain a 3d dimension.). The projection of the _boundingbox_ is the one specified in the _projection_ query parameter. If _projection_ is omitted the _boundingbox_ is expressed in wgs84 (EPSG:4326)",
                        "required": false,
                        "schema": {
                            "maxItems": 6,
                            "minItems": 4,
                            "type": "array",
                            "items": {
                                "type": "number"
                            }
                        }
                    },
                    {
                        "name": "quantityId",
                        "in": "query",
                        "description": "Select only the grid values for one or more quantities in the coverage. (Multiple identifiers should be separated by a comma).",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "pattern": "aaaa[,bbbb[,cccc[,...]]]"
                        }
                    },
                    {
                        "name": "quantityName",
                        "in": "query",
                        "description": "Select only the grid values for one or more quantities in the coverage. (Multiple names should be separated by a comma).",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "pattern": "aaaa[,bbbb[,cccc[,...]]]"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/projection"
                    },
                    {
                        "name": "startTime",
                        "in": "query",
                        "description": "Return only the grid values that have a time stamp equal to or later than _startTime_.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "Date-time string that adheres to RFC 3339. Examples \"2018-02-12T23:20:50Z\"",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "endTime",
                        "in": "query",
                        "description": "Return only the grid values that have a time stamp equal to or before _endTime_.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "Date-time string that adheres to RFC 3339. Examples \"2018-02-12T23:20:50Z\"",
                            "format": "date-time"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/filter"
                    },
                    {
                        "$ref": "#/components/parameters/format"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "(A subset of) The actual coverage data, returned as a netcdf-CF file (see http://cfconventions.org/Data/cf-conventions/cf-conventions-1.8/cf-conventions.html)",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An error occured.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/exception"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/coverages/{coverageId}/data-point": {
            "get": {
                "tags": [
                    "Coverage end points"
                ],
                "summary": "Get time series values for points in the coverage.",
                "description": "For one or more points inside the coverages domain set, retrieve the data for one or more quantities as one or more time series.",
                "operationId": "getCoveragePointData",
                "parameters": [
                    {
                        "name": "x",
                        "in": "query",
                        "description": "X-coordinate(s) of the requested point(s), separated by a comma. The number of x-coordinates must be equal to the nummer of y-coordinates in the _y_ query parameter\n",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "pattern": "x1[,x2[,x3[,...]]]"
                        }
                    },
                    {
                        "name": "y",
                        "in": "query",
                        "description": "Y-coordinate(s) of the requested point(s), separated by a comma. The number of y-coordinates must be equal to the nummer of x-coordinates in the _x_ query parameter\n",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "pattern": "y1[,y2[,y3[,...]]]"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/coverageId"
                    },
                    {
                        "name": "quantityId",
                        "in": "query",
                        "description": "Select only time series for one or more quantities in the coverage. (Multiple identifiers should be separated by a comma).",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "pattern": "aaaa[,bbbb[,cccc[,...]]]"
                        }
                    },
                    {
                        "name": "quantityName",
                        "in": "query",
                        "description": "Select only time series for one or more quantities in the coverage. (Multiple names should be separated by a comma).",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "pattern": "aaaa[,bbbb[,cccc[,...]]]"
                        }
                    },
                    {
                        "name": "startTime",
                        "in": "query",
                        "description": "Return only the events that have a time stamp equal to or later than _startTime_.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "Date-time string that adheres to RFC 3339. Examples \"2018-02-12T23:20:50Z\"",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "endTime",
                        "in": "query",
                        "description": "Return only the events that have a time stamp equal to or before _endTime_.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "Date-time string that adheres to RFC 3339. Examples \"2018-02-12T23:20:50Z\"",
                            "format": "date-time"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/filter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The list with requested time series. A json string with content according to the reponse of the _/timeseries_ end point of the DD-API",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "format": "According to DD-API's time series response."
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An error occured.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/exception"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/dataformats": {
            "get": {
                "tags": [
                    "Coverage end points"
                ],
                "summary": "Supported data file formats.",
                "description": "Returns the list of data file formats in which the system can provide the grid data can be delivered. The list contains at least netcdf-CF",
                "operationId": "getDataFormats",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "List of supported output data file formats.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An error occured.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/exception"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/projections": {
            "get": {
                "tags": [
                    "Coverage end points"
                ],
                "summary": "Supported output projections (EPSG codes)",
                "description": "Returns the list of projections, presented as a list of EPSG codes, to which the requested data can be transformed.",
                "operationId": "getProjections",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "List of supported output projections",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An error occured.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/exception"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/quantities": {
            "get": {
                "tags": [
                    "Coverage end points"
                ],
                "summary": "describe all quantities in the system",
                "description": "Returns the list of quantities that are available on one or more coverages in the providing system.",
                "operationId": "getQuantities",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/pageSize"
                    },
                    {
                        "$ref": "#/components/parameters/page"
                    },
                    {
                        "name": "boundingbox",
                        "in": "query",
                        "description": "Select only the quantities that are present on coverages with a geometry that intersects with the _boundingbox_.  The_boundingbox_ is expressed in wgs84 (EPSG:4326).",
                        "required": false,
                        "schema": {
                            "maxItems": 4,
                            "minItems": 4,
                            "type": "array",
                            "items": {
                                "type": "number"
                            }
                        }
                    },
                    {
                        "name": "startTime",
                        "in": "query",
                        "description": "Select only the quantities that are present on coverages of which the time axis include time stamps equal to or later than _startTime_.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "description": "Date-time string that adheres to RFC 3339. Examples \"2018-02-12T23:20:50Z\"",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "endTime",
                        "in": "query",
                        "description": "Select only the quantities that are present on coverages of which the time axis include time stamps equal to or before _endTime_.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "description": "Date-time string that adheres to RFC 3339. Examples \"2018-02-12T23:20:50Z\"",
                            "format": "date-time"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Metadata about the quantities available in the system.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/quantitylist"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An error occured.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/exception"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "exception": {
                "type": "object",
                "properties": {
                    "type": {
                        "description": "Type of error.",
                        "type": "string",
                        "format": "uri"
                    },
                    "title": {
                        "description": "Title of the error.",
                        "example": "Error processing the request.",
                        "type": "string"
                    },
                    "status": {
                        "description": "The HTTP error code number (HTTP Status Code).",
                        "example": 404,
                        "type": "integer"
                    },
                    "detail": {
                        "description": "Details of the error",
                        "example": "Request resulted in a response that was too large.",
                        "type": "string"
                    },
                    "instance": {
                        "description": "Reference to the error for the provider.",
                        "example": "https://myservice/meaningOrError400",
                        "type": "string"
                    },
                    "errors": {
                        "description": "Error details. More than one error can occur within the problem.",
                        "type": "array",
                        "items": {
                            "description": "Defines the field of an error in the filtering syntax.",
                            "type": "object",
                            "properties": {
                                "errorType": {
                                    "example": "Unknown comparer.",
                                    "type": "string"
                                },
                                "context": {
                                    "example": "Field 'locationCode'.",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "errorType",
                                "context"
                            ]
                        }
                    }
                }
            },
            "paginglinks": {
                "required": [
                    "defaultPageSize"
                ],
                "type": "object",
                "properties": {
                    "self": {
                        "type": "string",
                        "description": "Hyperlink of the current page.",
                        "nullable": true
                    },
                    "prev": {
                        "type": "string",
                        "description": "Hyperlink of the previous page.",
                        "nullable": true
                    },
                    "next": {
                        "type": "string",
                        "description": "Hyperlink of the next page.",
                        "nullable": true
                    },
                    "maxPageSize": {
                        "type": "integer",
                        "description": "Maximum page size.",
                        "format": "int32",
                        "nullable": true
                    },
                    "defaultPageSize": {
                        "type": "integer",
                        "description": "Default page size.",
                        "format": "int32"
                    },
                    "minPageSize": {
                        "type": "integer",
                        "description": "Minimum page size.",
                        "format": "int32"
                    },
                    "totalObjectCount": {
                        "type": "integer",
                        "description": "Count of all entities that satisfy the filter requirements. Will be left out when nocount=true is specified.",
                        "format": "int32",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Provides information for paging."
            },
            "provider": {
                "description": "Information regarding the system that is responsible for the response. Provides support contact information in case there are issues with response format or content.",
                "type": "object",
                "properties": {
                    "name": {
                        "description": "Name of the provider (of the service).",
                        "type": "string"
                    },
                    "supportUrl": {
                        "description": "Url to information for the provider (of the service).",
                        "type": "string"
                    },
                    "apiVersion": {
                        "description": "API Version with which the result set was generated. Can be used to parse the response.",
                        "type": "string"
                    },
                    "responseType": {
                        "description": "Name of the type of the result set. Can be used to parse the response.",
                        "type": "string"
                    },
                    "responseTimestamp": {
                        "description": "Timestamp when this response was created.",
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "coveragelist": {
                "required": [
                    "provider",
                    "paging",
                    "result"
                ],
                "type": "object",
                "properties": {
                    "provider": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/provider"
                            }
                        ],
                        "description": "Information about the provider.",
                        "nullable": true
                    },
                    "paging": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/paginglinks"
                            }
                        ]
                    },
                    "result": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/coverage"
                        },
                        "description": "Query results."
                    }
                },
                "additionalProperties": false,
                "description": "List of coverages that meet the query (i.e. the set of filter parameters)."
            },
            "coverage": {
                "required": [
                    "envelope",
                    "domainSet",
                    "rangeSet",
                    "rangeType"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "envelope": {
                        "$ref": "#/components/schemas/envelope"
                    },
                    "domainSet": {
                        "$ref": "#/components/schemas/domainSet"
                    },
                    "rangeSet": {
                        "$ref": "#/components/schemas/rangeSet"
                    },
                    "rangeType": {
                        "$ref": "#/components/schemas/rangeType"
                    },
                    "dataFormats": {
                        "$ref": "#/components/schemas/dataformats"
                    },
                    "metadata": {
                        "$ref": "#/components/schemas/metadata"
                    }
                },
                "additionalProperties": false,
                "description": "Metadata of the coverage."
            },
            "latLonRange": {
                "description": "Range and unit of the lon or the lat axis in the envelope",
                "type": "object",
                "properties": {
                    "lowerBound": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "string",
                                "format": "date-time"
                            }
                        ]
                    },
                    "upperBound": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "string",
                                "format": "date-time"
                            }
                        ]
                    },
                    "uomLabel": {
                        "type": "string"
                    }
                },
                "required": [
                    "lowerBound",
                    "upperBound",
                    "uomLabel"
                ],
                "additionalProperties": false
            },
            "realizationRange": {
                "description": "Range of the realization axis",
                "type": "object",
                "properties": {
                    "lowerBound": {
                        "type": "integer"
                    },
                    "upperBound": {
                        "type": "integer"
                    }
                },
                "required": [
                    "lowerBound",
                    "upperBound"
                ],
                "additionalProperties": false
            },
            "realizationIds": {
                "description": "List of identifiers that form the entries to the realization dimension",
                "type": "array",
                "minItems": 2,
                "items": {
                    "type": "string"
                },
                "example": [
                    "minimum",
                    "average",
                    "median",
                    "maximum"
                ]
            },
            "timeRange": {
                "description": "Range and unit of the time axis",
                "type": "object",
                "properties": {
                    "lowerBound": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "upperBound": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "uomLabel": {
                        "type": "string"
                    }
                },
                "required": [
                    "lowerBound",
                    "upperBound",
                    "uomLabel"
                ],
                "additionalProperties": false
            },
            "latLonRangeAndStep": {
                "description": "Range, unit and resolution of the lon/x or the lat/y axis in the domainSet",
                "type": "object",
                "properties": {
                    "lowerBound": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "string",
                                "format": "date-time"
                            }
                        ]
                    },
                    "upperBound": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "string",
                                "format": "date-time"
                            }
                        ]
                    },
                    "uomLabel": {
                        "type": "string"
                    },
                    "resolution": {
                        "type": "integer"
                    }
                },
                "required": [
                    "lowerBound",
                    "upperBound",
                    "uomLabel",
                    "resolution"
                ],
                "additionalProperties": false
            },
            "timeRangeAndStep": {
                "description": "Range, unit and resolution of the time axis in the domainSet",
                "type": "object",
                "properties": {
                    "lowerBound": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "upperBound": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "uomLabel": {
                        "type": "string"
                    },
                    "resolution": {
                        "type": "integer"
                    }
                },
                "required": [
                    "lowerBound",
                    "upperBound",
                    "uomLabel",
                    "resolution"
                ],
                "additionalProperties": false
            },
            "envelopeAxis": {
                "title": "Envelope axes",
                "description": "The axes (lon, lat, [realization,] t) in the envelope",
                "type": "object",
                "properties": {
                    "lon": {
                        "$ref": "#/components/schemas/latLonRange"
                    },
                    "lat": {
                        "$ref": "#/components/schemas/latLonRange"
                    },
                    "realization": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/realizationRange"
                            },
                            {
                                "$ref": "#/components/schemas/realizationIds"
                            }
                        ]
                    },
                    "t": {
                        "$ref": "#/components/schemas/timeRange"
                    }
                },
                "required": [
                    "lon",
                    "lat",
                    "t"
                ],
                "additionalProperties": false
            },
            "fullRegularDomainAxes": {
                "title": "DomainSet axes",
                "description": "The axes (lon/x, lat/y, [realization,] t) in the domainSet",
                "type": "object",
                "properties": {
                    "lon": {
                        "$ref": "#/components/schemas/latLonRangeAndStep"
                    },
                    "lat": {
                        "$ref": "#/components/schemas/latLonRangeAndStep"
                    },
                    "realization": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/realizationRange"
                            },
                            {
                                "$ref": "#/components/schemas/realizationIds"
                            }
                        ]
                    },
                    "t": {
                        "$ref": "#/components/schemas/timeRangeAndStep"
                    }
                },
                "required": [
                    "lon",
                    "lat",
                    "t"
                ],
                "additionalProperties": false
            },
            "timeRealizationDomainAxes": {
                "title": "DomainSet axes, time and realization only (used in displaced coverage)",
                "description": "The axes (lon/x, lat/y, [realization,] t) in the domainSet",
                "type": "object",
                "properties": {
                    "realization": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/realizationRange"
                            },
                            {
                                "$ref": "#/components/schemas/realizationIds"
                            }
                        ]
                    },
                    "t": {
                        "$ref": "#/components/schemas/timeRangeAndStep"
                    }
                },
                "required": [
                    "t"
                ],
                "additionalProperties": false
            },
            "displacedDomainAxes": {
                "title": "DomainSet axes for displaced (i.e. curvilinear grid)",
                "description": "The names and units of the curvilinear axes in a displaced grid",
                "type": "object",
                "properties": {
                    "axisLabels": {
                        "type": "array",
                        "minItems": 2,
                        "maxItems": 3,
                        "items": {
                            "type": "string"
                        }
                    },
                    "uomLabels": {
                        "type": "array",
                        "minItems": 2,
                        "maxItems": 3,
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "axisLabels",
                    "uomLabels"
                ],
                "additionalProperties": false
            },
            "envelope": {
                "title": "envelope",
                "description": "The envelope around a coverage is defined by the lower and upper bound of each axis, respectively.",
                "type": "object",
                "properties": {
                    "srsName": {
                        "type": "string",
                        "format": "uri"
                    },
                    "axis": {
                        "$ref": "#/components/schemas/envelopeAxis"
                    }
                },
                "required": [
                    "srsName",
                    "axis"
                ]
            },
            "domainSet": {
                "title": "domainSet",
                "description": "The domainSet describes the *direct positions* of the coverage, i.e., the locations for which values are available.",
                "type": "object",
                "oneOf": [
                    {
                        "properties": {
                            "srsName": {
                                "type": "string",
                                "format": "uri"
                            },
                            "axis": {
                                "$ref": "#/components/schemas/fullRegularDomainAxes"
                            }
                        },
                        "required": [
                            "srsName",
                            "axis"
                        ]
                    },
                    {
                        "properties": {
                            "srsName": {
                                "type": "string",
                                "format": "uri"
                            },
                            "axis": {
                                "$ref": "#/components/schemas/timeRealizationDomainAxes"
                            },
                            "displacement": {
                                "$ref": "#/components/schemas/displacedDomainAxes"
                            }
                        },
                        "required": [
                            "srsName",
                            "axis",
                            "displacement"
                        ]
                    }
                ]
            },
            "rangeSet": {
                "title": "rangeSet",
                "description": "The rangeSet specifies the end point where the actual data of the coverage can be found.",
                "type": "object",
                "properties": {
                    "type": {
                        "enum": [
                            "RangeSetRefType"
                        ]
                    },
                    "dataReference": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        }
                    }
                },
                "required": [
                    "type",
                    "dataReference"
                ]
            },
            "rangeType": {
                "title": "rangeType",
                "description": "The rangeType element describes the semantics of a coverage's rangeSet, i.e. which quantities are present in the coverage.",
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/quantity"
                }
            },
            "dataformats": {
                "title": "dataformats",
                "description": "The list of formats in which the data on this coverage can be provided.",
                "type": "array",
                "minItems": 1,
                "items": {
                    "type": "string"
                }
            },
            "metadata": {
                "description": "Additional metadata on the coverage.",
                "type": "object",
                "properties": {
                    "source": {
                        "$ref": "#/components/schemas/source"
                    }
                },
                "additionalProperties": true
            },
            "quantitylist": {
                "required": [
                    "provider",
                    "paging",
                    "result"
                ],
                "type": "object",
                "properties": {
                    "provider": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/provider"
                            }
                        ],
                        "description": "Information about the provider.",
                        "nullable": true
                    },
                    "paging": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/paginglinks"
                            }
                        ]
                    },
                    "result": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/quantity"
                        },
                        "description": "Query results."
                    }
                },
                "additionalProperties": false,
                "description": "List of quantities that meet the query."
            },
            "quantity": {
                "title": "quantity",
                "description": "Quantity in a coverage, i.e. one of the variables for which data is present in the coverage.",
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "uom": {
                        "title": "units of measure",
                        "description": "units of measure",
                        "type": "object",
                        "properties": {
                            "code": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "code"
                        ]
                    },
                    "definitions": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "standard": {
                                    "type": "string"
                                },
                                "code": {
                                    "type": "string"
                                },
                                "name": {
                                    "type": "string"
                                },
                                "reference": {
                                    "type": "string",
                                    "format": "uri"
                                }
                            },
                            "required": [
                                "standard",
                                "code"
                            ]
                        }
                    }
                }
            },
            "source": {
                "description": "Optionally describes the type of data in the coverage, the owner of the data, the way it was created, etc.",
                "type": "object",
                "properties": {
                    "process": {
                        "description": "Type of process that generated the coverage",
                        "type": "string",
                        "example": "satellite, radar, computation, ..."
                    },
                    "name": {
                        "description": "The name of the source that generated the coverage, e.g. a satellite name or a model name.",
                        "type": "string",
                        "example": "Sentinel-6, Delft3D-Flow, ..."
                    },
                    "description": {
                        "description": "Additional description of the data source (might contain a URL to a site with information on the model).",
                        "type": "string"
                    },
                    "institution": {
                        "description": "The institution that produced and/or owns the data",
                        "type": "object",
                        "properties": {
                            "name": {
                                "description": "The name of the institution",
                                "type": "string"
                            },
                            "description": {
                                "description": "Additional description of the institution",
                                "type": "string"
                            }
                        },
                        "required": [
                            "name"
                        ]
                    }
                }
            }
        },
        "parameters": {
            "pageSize": {
                "name": "pageSize",
                "in": "query",
                "description": "Requested number of items in the response.",
                "required": false,
                "style": "form",
                "explode": false,
                "schema": {
                    "maximum": 10000,
                    "minimum": 1,
                    "type": "integer",
                    "default": 10
                }
            },
            "page": {
                "name": "page",
                "in": "query",
                "description": "Requested sub page of the total list of items",
                "required": false,
                "style": "form",
                "explode": false,
                "schema": {
                    "type": "string"
                }
            },
            "coverageId": {
                "name": "coverageId",
                "in": "path",
                "description": "Identifier (name) of a specific coverage",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "filter": {
                "name": "filter",
                "in": "query",
                "description": "Query parameter that offers additional filtering by means of a generic filter mechanism. Used for instance for selecting coverages with a certain analysis time and for selecting data for an ensemble member (i.e. _realization_) from an ensemble run. See https://github.com/DigitaleDeltaOrg/dd-grid-api/blob/master/dd-grid-api-filtering.md for details. Implementation of this quety parameter is optional. Systems may choose to not implement it and return a HTTP 400 status code (bad request).\n",
                "required": false,
                "schema": {
                    "type": "string",
                    "example": "realization:eq:16 or realization:eq:1,7,8,9,15 or realization:eq:min,max"
                }
            },
            "format": {
                "name": "format",
                "in": "query",
                "description": "Specify in which format the data should be returned. The list of additional available formats can be retrieved from the _/dataformats_ end point, and/or in the _dataFormats_ attribute of a coverage.\n",
                "required": true,
                "schema": {
                    "type": "string",
                    "example": "netcdf-cf"
                }
            },
            "projection": {
                "name": "projection",
                "in": "query",
                "description": "Reproject the output coverage to the given _projection_. If ommitted, epsg:4326 is assumed (wgs84)",
                "required": false,
                "style": "form",
                "explode": true,
                "schema": {
                    "type": "string",
                    "pattern": "epsg:nnnn"
                }
            }
        }
    }
}